#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "keys_nb.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        kp_kp: kp_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };

        kp_mo: kp_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_MO";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        Base_layer {
            display-name = "Alphas";
            bindings = <
&kp_kp TAB ESC  &kp Q              &kp W  &kp E     &kp R  &kp T                          &kp UP                &kp Y                    &kp U               &kp I      &kp O    &kp P           &kp_kp NB_QUESTION NB_A_RING
&kp LEFT_SHIFT  &kp A              &kp S  &kp D     &kp F  &kp G                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H                    &kp J               &kp K      &kp L    &kp NB_O_SLASH  &kp NB_AE
&kp LCTRL       &kp_kp LEFT_ALT Z  &kp X  &kp C     &kp V  &kp B      &kp F5              &kp DOWN              &kp N                    &kp M               &kp COMMA  &kp DOT  &kp NB_MINUS    &kp_kp NB_ASTERISK NB_SQT
                                          &kp LGUI  &mo 1  &kp SPACE                                            &kp_kp LEFT_SHIFT ENTER  &kp_mo 2 BACKSPACE  &mo 3
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        symbols {
            display-name = "num sym";
            bindings = <
&kp TAB           &kp NB_EXCLAMATION   &kp NB_DQT           &kp NB_HASH           &kp NB_DLLR              &kp NB_PERCENT                                      &mmv MOVE_UP                     &kp NB_N7  &kp NB_N8  &kp NB_N9  &none       &kp_kp NB_PLUS NB_EQUAL  &kp DEL
&kp LEFT_SHIFT    &kp NB_AMPERSAND     &kp NB_SLASH         &kp NB_AT             &kp NB_LEFT_PARENTHESIS  &kp NB_RIGHT_PARENTHESIS            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NB_N4  &kp NB_N5  &kp NB_N6  &none       &kp NB_UMLAUT            &none
&kp NB_LESS_THAN  &kp NB_GREATER_THAN  &kp NB_LEFT_BRACKET  &kp NB_RIGHT_BRACKET  &kp NB_LEFT_BRACE        &kp NB_RIGHT_BRACE        &kp F2                    &mmv MOVE_DOWN                   &kp NB_N1  &kp NB_N2  &kp NB_N3  &kp NB_DOT  &none                    &kp NB_GRAVE
                                                            &trans                &trans                   &trans                                                                               &kp NB_N0  &kp DEL    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Functions {
            display-name = "func";
            bindings = <
&trans  &kp F1  &kp F2      &kp F3             &kp F4            &kp F5                                         &mmv MOVE_UP                     &kp F6   &kp F7          &kp F8    &kp F9     &kp F10  &kp F11
&trans  &none   &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &none                          &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp INS  &kp HOME        &kp UP    &kp END    &none    &none
&trans  &none   &kp C_PREV  &kp C_NEXT         &kp C_PLAY_PAUSE  &none      &kp C_PLAY_PAUSE                    &mmv MOVE_DOWN                   &kp F13  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT  &none    &none
                            &trans             &trans            &kp SPACE                                                                       &kp RET  &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_3 {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none         &none  &none  &none  &none  &none  &none
&none           &none         &none         &none         &none         &none                  &none  &none  &none  &none  &none  &none  &none  &none  &none
&bt BT_CLR_ALL  &none         &none         &none         &none         &none         &none           &none         &none  &none  &none  &none  &none  &none
                                            &none         &none         &none                                       &none  &none  &none
            >;
        };
    };
};
